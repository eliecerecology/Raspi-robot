lista = list(3,8)
do.call(e, lista)
h = function(a, b) {
if (a < b) { a <<- 3} && {print ("success")} else  {print ("fuck you") }
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() c = a^2
lista = list(3,8)
#do.call(what, args, quote = FALSE, envir = parent.frame())
do.call(e, lista)
h = function(a, b) {
if (a < b) { a <<- 3}  else if (a < b) {do.call(j,list() ) }
}
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- 3}  else if (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() c = a^2
lista = list(3,8)
do.call(e, lista)
c
a
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- 3}  else if (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {c <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
c
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- 3}  else if (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
h = function(a, b) {
if (a < b) { a <<- 3}  and (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <- 3 environment()}  else (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
h = function(a, b) {
if (a < b) { a <- 3 environment()}  else (a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- 3 }  else if(a < b) {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
c
a
h = function(a, b) {
if (a < b) { a <<- 3 }{do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
h = function(a, b) {
if (a < b) { a <<- 3 } & {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
rm(list=ls(all=TRUE)) #####Environments
gene = list( )
h = function(a, b) {
if (a < b) { a <<- 3 } & {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
gene = list(h, e, j )
edit(gene)
gene[1]
environment(h)
environment(gene)
environment(a)
ord = {a, b, c, d, e, f, g, h};
ord = {a, b, c, d, e, f, g, h}; RandomSample[ord]
ord = {a, b, c, d, e, f, g, h}
RandomSample[ord]
ord = (a, b, c, d, e, f, g, h)
ord = (a, b, c, d, e, f, g, h)
ord = c(a, b, c, d, e, f, g, h)
ord = c(a, b, c, d, e, f, g, h)
a = ()
a = as.numeric()
b = as.numeric()
c = as.numeric()
ord = c(a, b, c)
RandomSample[ord]
SeedRandom[1234]; Permute[ord, RandomPermutation[8]]
x <- 1:12
x
sample(x)
sample(x)
h = function(a, b) {
if (a < b) { a <<- 3 } & {do.call(j,list() ) } else {print ("fuck you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
gene = list(h, e, j )
gene
sample(gene)
sample(gene)
sample(gene)
foo <- c(12, 22, 33)
names(foo) <- c("tic", "tac", "toe")
foo
names(foo)
foo(12)
foo <- c(12, 22, 33)
names(foo) <- c("tic", "tac", "toe")
foo
foo(tic)
foo$tic
foo["tac"]
foo["12"]
foo[12]
foo
foo = sample(foo)
foo
foo
foo
foo = sample(foo)
foo
names = sample(names(foo)
)
foo
names = sample(names(foo)
)
foo
foo = sample(foo)
names = sample(names(foo))
foo
foo = sample(foo)
names = sample(names(foo))
foo
foo <- c(12, 22, 33)
names(foo) <- c("tic", "tac", "toe")
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
frust = new.env()
h = function(a, b) {
if (a < b) { a <<- 3 } & {do.call(j,list() ) } else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
lista = list(3,8)
do.call(e, lista)
environment(a)
environment(h)
environment(e)
environment(j)
environment(j)
frust$a
R_GlobalEnv$a
GlobalEnv$a
Global$a
a
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
rm(list=ls(all=TRUE)) #####Environments
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
environment(j)
do.call(e, lista)
a
reward = new.env(points)
ls(reward)
reward = new.env(points=as.numeric())
reward = new.env(points)
ls(reward)
reward = new.env()
ls(reward)
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
reward = new.env()
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("points", 3, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
reward = new.env()
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("points", points + 3, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3} & {assign("points", -2, reward)else { do.call(h, lista)}
}
j = function() {a <<- a^2}
lista = list(3,8)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("points", points + 3, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {assign("points", -2, reward)}
}
j = function() {a <<- a^2}
lista = list(3,8)
a
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
reward = new.env()
h = function(a, b) {
if (a < b) { a <<- 3 } & {do.call(j,list() ) } & {assign("points", points + 3, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {assign("points", -2, reward)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
rm(list=ls(all=TRUE)) #####Environments
my.env <- new.env()
logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = points + 3} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {assign("points", -2, reward)}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
lista = list(3,8)
do.call(e, lista)
rm(list=ls(all=TRUE)) #####Environments
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = a + 3} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {assign("points", -2, reward)}
}
j = function() {a <<- a^2}
lista = list(3,8)
a
do.call(e, lista)
a
get("points", reward)
reward$points
rm(list=ls(all=TRUE)) #####Environments
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = a + 3} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -2)}
}
j = function() {a <<- a^2}
lista = list(3,8)
rm(list=ls(all=TRUE)) #####Environments
reward = new.env()
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = a + 3} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -2}
}
j = function() {a <<- a^2}
lista = list(3,8)
a
do.call(e, lista)
reward$points
rm(list=ls(all=TRUE)) #####Environments
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = reward$points + 3} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -2}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
get("points", reward)
get("points", reward)
get("a", my.env)
points
rm(list=ls(all=TRUE)) #####Environments
reward = new.env()
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = reward$points -1} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -2}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
do.call(e, lista)
points
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = -1} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -2}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points = -1} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {reward$points[1] = -1} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
get("points", reward)
a
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {function() reward$points = reward$points -9} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
do.call(e, lista)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("points", 4, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
reward$points
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("pointsi", 4, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2}
lista = list(3,8)
do.call(e, lista)
a
get("pointsi", reward)
get("points", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("pointsi", 4, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2} & {reward$total = reward$points + reward$pointsi }
lista = list(3,8)
do.call(e, lista)
do.call(e, lista)
a
get("points", reward)
get("total", reward)
rm(list=ls(all=TRUE)) #####Environments
#my.env <- new.env()
#logic = new.env()
reward = new.env()
#assign("h", if (a < b){ for(i in 1:3){logic$d[i] <- i}}, envir = logic)
h = function(a, b) {
if (a < b) { a <<- a } & {do.call(j,list() ) } & {assign("pointsi", 4, reward)} else {print ("Hei you")}
} #& do.call(j, list())
e = function(a, b){
if (a == b){ c = 3 } else  if ( a > 3) {c = - 3}  else { do.call(h, lista)} & {reward$points = -9}
}
j = function() {a <<- a^2} & {reward$points = reward$points + reward$pointsi }
lista = list(3,8)
do.call(e, lista)
do.call(e, lista)
a
get("points", reward)
a
a = a + 1
a
